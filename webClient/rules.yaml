functions:            #reusable boolean functions
  - isLoggedIn():     auth.username !== null
  - createOnly():     next.exists() && !prev.exists()
  - deleteOnly():     prev.exists() && !next.exists()
  - isUser(username): auth.uid === username

schema:
  definitions:         #create a reusable message model
    email:
      type: object

  type: object
  properties:
    users: # the users subtree is a collection of users
      type: object
      $userid: #wildchild expression of many children
        type: object
        properties:
          machines:
            type: object
            $machineName:
              type: object
              properties:
                exists:
                  type: boolean
                history:
                  type: object
                  $line:
                    type: object
                    properties:
                      command:
                        type: string
                      stderr:
                        type: string
                      stdout:
                        type: string
                      error:
                        type: object
                commands:
                  type: object
                  $pend:
                    type: string
                otherUsers:
                  type: object
                  properties:
                    pending:
                      type: object
                      $pendEmails:
                        type: string
                        constraints:  (auth.uid === next && createOnly()) ||
                                      (isUser($userid) && deleteOnly())
                    allowed:
                      type: object
                      $ou:
                        type: string
                redirectUser:
                  type: string
    emails:
      type: object
      $email:
        type: string
        constraints:  auth.uid === next && createOnly()
  additionalProperties: false

access:
  - location: users/$userid/
    write:    isUser($userid)
    read:     isUser($userid)

  - location: emails/
    write:    isLoggedIn()
    read:     isLoggedIn()

  - location: users/$userid/machines/$machineName/otherUsers/pending/
    write:    isLoggedIn()

  - location: users/$userid/machines/$machineName/
    write:    data.otherUsers.allowed.child(auth.uid).exists()
    read:     data.otherUsers.allowed.child(auth.uid).exists()